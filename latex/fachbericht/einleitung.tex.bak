\section{Einleitung}
Klassische Regler werden heutzutage oft über die gängigen Faustformeln dimensioniert. Leider erhält man durch die Anwendung von Faustformeln oft unbrauchbare Reglerparameter. Aus diesem Grund müssen Regler oft nachoptimiert werden. Eine andere Dimensionierungsmöglichkeit ist die Phasengangmethode von Jakob Zellweger. Diese Methode ist zwar aufwändiger, liefert jedoch stabilere Werte für die Regler. Wie der Name der Methode bereits verrät, werden die Reglerwerte über den Phasengang der Strecke ermittelt. Es handelt sich hierbei um eine Dimensionierung, die von Hand auf logarithmischen Papier erarbeitet wird. Dies ist sehr aufwändig und erfordert viel Arbeit. Unsere Aufgabe in diesem Projekt ist es, diese Methode mit Hilfe einer Software zu automatisieren.
 
Ziel ist es ein GUI (Graphical User Interface) zu erstellen, bei welchem die Streckenparameter eingegeben werden können. Die Software soll die Eingaben mit der Phasengangmethode weiterverarbeiten. Daraus resultieren die Reglerparameter. Ein weiteres Ziel wird die Schrittantwort der gesamten Regelung sein. Die Software simuliert die Schrittantwort und stellt diese graphisch dar. Die Bedienung des GUI soll übersichtlich und einfach in der Handhabung sein.

Als Ausgangslage ist die Schrittantwort der Strecke gegeben, womit die Streckenparameter herausgelesen werden können. Diese Werte sind in die Software einzugeben. Resultierend daraus erhält der Anwender die Reglerparameter sowie die Schrittantwort davon. Dieser Prozess kann in sechs Bereiche unterteilt werden. Beginnend mit der Streckenidentifikation. Die Übertragungsfunktion der Strecke wird über die Sani-Approximation ermittelt und berechnet. Als nächstes kann der Frequenzgang berechnet werden und mit der Phasengangmethode die Reglerwerte ermittelt werden. Somit sind die Reglerparameter bereits bestimmt und die Übertragungsfunktion des Reglers berechnet. Doch die Schrittantwort der Regelung fehlt zu diesem Zeitpunkt noch. Mit der Faltung können die beiden Übertragungsfunktionen, Regler und Strecke, zusammengerechnet werden. Für die Berechnung der Schrittantwort werden zuerst die Residuen der Übertragungsfunktion berechnet. Die Residuen werden benötigt, um mittels der inversen Laplace Transformation die Impulsantwort zu bilden. Abschliessend müssen die Impulsantworten aufsummiert werden, sodass die Schrittantwort der Regelung entsteht.

Die Software ist im bekannten MVC-Pattern gehalten. Die View implementiert die graphische Oberfläche der Software. Sie fungiert als Benutzerschnittstelle und ermöglicht die Eingabe der Streckenparameter. Der Controller steuert die Berechnungen der Applikation. Er leitet die Aufgaben dem Model weiter. Im Model werden die Berechnungen der entsprechenden Regler getätigt. Unter Verwendung der Klasse Polynome, Transferfunction und Schrittantwort werden die Regler berechnet. Die Daten werden über die Klasse Observer dem View zurückgegeben und dort aktualisiert.

Der nachfolgende Bericht ist in zwei Abschnitte unterteilt. Der erste Teil beinhaltet die Grundlage der Phasengangmethode sowie deren wichtigste Formeln. Im zweiten Teil wird auf die Programmierung eingegangen, die auf dem MVC-Pattern beruht. Am Ende wird die Funktionalität der wichtigsten Methoden geklärt. Ein weiterer wichtiger Bestandteil ist das MVC-Pattern.
